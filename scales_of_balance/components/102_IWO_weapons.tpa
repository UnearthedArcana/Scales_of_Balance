
//__________________________________________________________________________________
//__________________________________________________________________________________
//
//							FUNCTIONAL WEAPON TWEAKS
//__________________________________________________________________________________
//__________________________________________________________________________________

DEFINE_ACTION_FUNCTION weapon_tweaks BEGIN

//__________________________________________________________________________________

COPY ~scales_of_balance/misc/d5_dagg.eff~ ~override~

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_BYTE 0x31 prof
	READ_SHORT 0x1c type
	PATCH_IF (%prof% = 96) BEGIN // daggers
	  LPF ALTER_ITEM_HEADER INT_VAR header_type=1 dicesize=5 dicenumber=1 END
	  FOR (index = 0x54 ; index >= 0x50 ; index -= 4) BEGIN // loop through descriptions
		READ_LONG "%index%" "valid"
		PATCH_IF ("%valid%" < 2147483646) AND ("%valid%" >= 0) BEGIN // verify description is valid
		  READ_STRREF "%index%" "description"
		  PATCH_IF (~%description%~ STRING_CONTAINS_REGEXP ~1d6~) = 0 BEGIN // more validation
			INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
			  REPLACE_TEXTUALLY ~1d4~ ~1d5~
			END
			SAY_EVALUATED "%index%" ~%new_desc%~
		  END
		END
	  END
	END
	PATCH_IF (%prof% = 102) BEGIN // quarterstaff
	  LPF ADD_ITEM_EQEFFECT INT_VAR opcode=0 target=1 timing=2 parameter1=1 parameter2=0 END
	END
	PATCH_IF (%prof% = 100) BEGIN // flails
	  LPF ALTER_ITEM_HEADER INT_VAR header_type=1 dicesize=8 dicenumber=1 END
	END
	PATCH_IF (%prof% = 98) BEGIN // spears
	  LPF ALTER_ITEM_HEADER INT_VAR header_type=1 dicesize=10 dicenumber=1 END
	  FOR (index = 0x54 ; index >= 0x50 ; index -= 4) BEGIN // loop through descriptions
		READ_LONG "%index%" "valid"
		PATCH_IF ("%valid%" < 2147483646) AND ("%valid%" >= 0) BEGIN // verify description is valid
		  READ_STRREF "%index%" "description"
		  PATCH_IF (~%description%~ STRING_CONTAINS_REGEXP ~1d6~) = 0 BEGIN // more validation
			INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
			  REPLACE_TEXTUALLY ~1d6~ ~1d10~
			END
			SAY_EVALUATED "%index%" ~%new_desc%~
		  END
		END
	  END
	END
/*
	PATCH_IF (%prof% = 99) BEGIN // halberds
	  LPF ALTER_ITEM_HEADER INT_VAR header_type=1 dicesize=5 dicenumber=2 END
	  FOR (index = 0x54 ; index >= 0x50 ; index -= 4) BEGIN // loop through descriptions
		READ_LONG "%index%" "valid"
		PATCH_IF ("%valid%" < 2147483646) AND ("%valid%" >= 0) BEGIN // verify description is valid
		  READ_STRREF "%index%" "description"
		  PATCH_IF (~%description%~ STRING_CONTAINS_REGEXP ~1d10~) = 0 BEGIN // more validation
			INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
			  REPLACE_TEXTUALLY ~1d10~ ~2d5~
			END
			SAY_EVALUATED "%index%" ~%new_desc%~
		  END
		END
	  END
	END
*/
  END
BUT_ONLY
//__________________________________________________________________________________


//RANGED WEAPON CHANGES_____________________________________________________________
COPY_EXISTING ~xbow04.itm~ ~override~
	READ_LONG 0x08 light_xbow_strref
BUT_ONLY
COPY_EXISTING ~xbow01.itm~ ~override~
	READ_LONG 0x08 heavy_xbow_strref
BUT_ONLY

/*
ACTION_IF NOT FILE_EXISTS_IN_GAME ~d5_lbows.2da~ BEGIN
	COPY ~scales_of_balance/lib/d5_base.2da~ ~override/d5_lbows.2da~
END
*/

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_SHORT ~0x1c~ ~type~
	PATCH_IF (~%type%~ = ~14~) BEGIN // bullets
	  LPF ALTER_ITEM_HEADER INT_VAR header_type=2 damage_type=2 END
	  FOR (index = 0x54 ; index >= 0x50 ; index -= 4) BEGIN // loop through descriptions
		READ_LONG "%index%" "valid"
		PATCH_IF ("%valid%" < 2147483646) AND ("%valid%" >= 0) BEGIN // verify description is valid
		  READ_STRREF "%index%" "description"
		  PATCH_IF (~%description%~ STRING_CONTAINS_REGEXP ~missile~) = 0 BEGIN // more validation
			INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
			  REPLACE_TEXTUALLY ~missiles~ ~projectiles~
			  REPLACE_TEXTUALLY ~missile (piercing)~ ~blunt~
			  REPLACE_TEXTUALLY ~missile~ ~blunt~
			END
			SAY_EVALUATED "%index%" ~%new_desc%~
		  END
		END
	  END
	END
	PATCH_IF (~%type%~ = ~24~) BEGIN // darts
	  PATCH_IF !(~%SOURCE_RES%~ STRING_EQUAL_CASE ~ENEBLADE~) BEGIN
	    LPF ALTER_EFFECT INT_VAR silent = 1 match_opcode = 1 parameter1 = 2 END
	  END
	END
	PATCH_IF (~%type%~ = ~31~) BEGIN // bolts
	  LPF ALTER_ITEM_HEADER INT_VAR header_type=2 dicesize=6 dicenumber=1 END
	END
	PATCH_IF (%type% = 27) BEGIN // crossbows
	  READ_LONG 0x08 gen_name_strref
	  PATCH_IF (GAME_IS ~bgee bg2ee iwdee eet~) BEGIN
	    PATCH_IF (gen_name_strref = %light_xbow_strref%) BEGIN
		  READ_BYTE 0x18 handed
		  WRITE_BYTE 0x18 (~%handed%~ BAND ~0b11111101~)
		  FOR (index = 0x54 ; index >= 0x50 ; index -= 4) BEGIN // loop through descriptions
		    READ_LONG "%index%" "valid"
		    PATCH_IF ("%valid%" < 2147483646) AND ("%valid%" >= 0) BEGIN // verify description is valid
			  READ_STRREF "%index%" "description"
			  INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
			    REPLACE_TEXTUALLY EXACT_MATCH ~Type: Two-handed~ ~~
			  END
			  SAY_EVALUATED "%index%" ~%new_desc%~
		    END
		  END
	    END
	  END
	  PATCH_IF (gen_name_strref = %heavy_xbow_strref%) BEGIN
		READ_LONG 0x64 abilities_off
		READ_SHORT 0x68 num_abilities
		FOR (ability = 0; ability < num_abilities; ability += 1) BEGIN
		  PATCH_IF (BYTE_AT (abilities_off + 0x38 * ability + 0x00) == 4) BEGIN // Launcher
			READ_SHORT (abilities_off + 0x38 * ability + 0x1a) damage_bonus
			SET new_damage_bonus = damage_bonus + 1
			WRITE_SHORT (abilities_off + 0x38 * ability + 0x1a) new_damage_bonus
		  END
		END
		FOR (index = 0x54 ; index >= 0x50 ; index -= 4) BEGIN // loop through descriptions
		  READ_LONG "%index%" "valid"
		  PATCH_IF ("%valid%" < 2147483646) AND ("%valid%" >= 0) BEGIN // verify description is valid
			READ_STRREF "%index%" "description"
			INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +5~ ~Damage: +6~
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +4~ ~Damage: +5~
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +3~ ~Damage: +4~
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +2~ ~Damage: +3~
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +1~ ~Damage: +2~
			END
			PATCH_IF GAME_IS ~bgee bg2ee eet iwdee~ AND NOT (~%description%~ STRING_CONTAINS_REGEXP ~Damage:~ = 0) BEGIN
			  INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
				REPLACE_TEXTUALLY ~Speed Factor:~ ~Damage: +1
Speed Factor:~
			  END
			END
			PATCH_IF ENGINE_IS ~tob~ AND NOT (~%description%~ STRING_CONTAINS_REGEXP ~Damage:~ = 0) BEGIN
			  INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
				REPLACE_TEXTUALLY ~Weight:~ ~Damage: +1
Weight:~
			  END
			END
			SAY_EVALUATED "%index%" ~%new_desc%~
		  END
		END
	  END
	END
	PATCH_IF (~%type%~ = ~5~) BEGIN // arrows
	  LPF ALTER_ITEM_HEADER INT_VAR header_type=2 dicesize=5 END
	  FOR (index = 0x54 ; index >= 0x50 ; index -= 4) BEGIN // loop through descriptions
		READ_LONG "%index%" "valid"
		PATCH_IF ("%valid%" < 2147483646) AND ("%valid%" >= 0) BEGIN // verify description is valid
		  READ_STRREF "%index%" "description"
		  PATCH_IF (~%description%~ STRING_CONTAINS_REGEXP ~1d6~) = 0 BEGIN // more validation
			INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
			  REPLACE_TEXTUALLY ~1d6~ ~1d5~
			END
			SAY_EVALUATED "%index%" ~%new_desc%~
		  END
		END
	  END
	END
	PATCH_IF (~%type%~ = ~15~) BEGIN // bows
/*
	  READ_BYTE 0x31 ~bowtype~
	  PATCH_IF (~%bowtype%~ = 104) BEGIN   // longbows
		INNER_ACTION BEGIN
		  APPEND ~d5_lbows.2da~ ~%SOURCE_RES% %TAB% longbow~
		END
*/
		READ_LONG 0x64 abilities_off
		READ_SHORT 0x68 num_abilities
		FOR (ability = 0; ability < num_abilities; ability += 1) BEGIN
		  PATCH_IF (BYTE_AT (abilities_off + 0x38 * ability + 0x00) == 4) BEGIN // Launcher
			READ_SHORT (abilities_off + 0x38 * ability + 0x1a) damage_bonus
			SET new_damage_bonus = damage_bonus + 2
			WRITE_SHORT (abilities_off + 0x38 * ability + 0x1a) new_damage_bonus
		  END
		END
		FOR (index = 0x54 ; index >= 0x50 ; index -= 4) BEGIN // loop through descriptions
		  READ_LONG "%index%" "valid"
		  PATCH_IF ("%valid%" < 2147483646) AND ("%valid%" >= 0) BEGIN // verify description is valid
			READ_STRREF "%index%" "description"
			INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +5~ ~Damage: +6~
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +4~ ~Damage: +6~
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +3~ ~Damage: +5~
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +2~ ~Damage: +4~
			  REPLACE_TEXTUALLY EXACT_MATCH ~Damage: +1~ ~Damage: +3~
			END
			PATCH_IF GAME_IS ~bgee bg2ee eet iwdee~ AND NOT (~%description%~ STRING_CONTAINS_REGEXP ~Damage:~ = 0) BEGIN
			  INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
				REPLACE_TEXTUALLY ~Speed Factor:~ ~Damage: +2
Speed Factor:~
			  END
			END
			PATCH_IF ENGINE_IS ~tob~ AND NOT (~%description%~ STRING_CONTAINS_REGEXP ~Damage:~ = 0) BEGIN
			  INNER_PATCH_SAVE new_desc ~%description%~ BEGIN
				REPLACE_TEXTUALLY ~Weight:~ ~Damage: +2
Weight:~
			  END
			END
			SAY_EVALUATED "%index%" ~%new_desc%~
		  END
		END
		LPF DELETE_EFFECT INT_VAR match_opcode = 1 END
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode=1 target=1 timing=2 power=1 parameter1=7 parameter2=1 END
/*
	  END
	  PATCH_IF (~%bowtype%~ = 105) BEGIN   // shortbows
		LPF DELETE_EFFECT INT_VAR match_opcode = 1 END
		LPF ADD_ITEM_EQEFFECT INT_VAR opcode=1 target=1 timing=2 power=1 parameter1=2 parameter2=1 END
	  END
*/
	END
  END
BUT_ONLY
//__________________________________________________________________________________


//NO RANGED STR BONUS_______________________________________________________________
//
ACTION_IF GAME_IS ~bgee bg2ee eet iwdee~ BEGIN
  COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
	PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	  READ_BYTE 0x31 prof
	  READ_SHORT 0x1c type
	  PATCH_IF (%prof% = 96 || %prof% = 107 || %prof% = 106) BEGIN // daggers, slings, darts
		READ_LONG 0x64 abil_offset
		READ_SHORT 0x68 abil_number
		WHILE (%abil_number% > 0) BEGIN
		  SET abil_number = (%abil_number% - 1)
		  READ_SHORT (%abil_offset% + (0x38 * %abil_number%)) range
		  PATCH_IF (%range% = 2 || %range% = 4) BEGIN // ranged or launcher
			WRITE_BYTE (%abil_offset% + 0x26 + (0x38 * %abil_number%)) 0
		  END
		END
	  END
	END
  BUT_ONLY
END
//__________________________________________________________________________________

					
//WEAR ELVEN CHAIN___________________________________________________________________
//
ACTION_IF !(FILE_EXISTS_IN_GAME ~d5__echan.d5~) BEGIN
	INCLUDE ~%MOD_FOLDER%/lib/elven_chain.tpa~
END
//___________________________________________________________________________________


END // end function